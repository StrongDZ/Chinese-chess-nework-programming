@startuml
title Sign Out Sequence Diagram - Chinese Chess (TCP Socket)

skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true

actor User
participant "UI" as UI
participant "TCP Socket" as Socket
participant "Server" as Server
database "Database" as DB

== Sign Out Request ==
User -> UI: Click "Sign Out" button
activate UI

UI -> UI: Show confirmation dialog
UI -> User: "Are you sure you want to sign out?"

alt User cancels
    User -> UI: Click "Cancel"
    UI -> User: Stay in current page
    deactivate UI
    
else User confirms
    User -> UI: Click "Confirm"
    
    == Check Active Game ==
    alt User is in active game
        UI -> UI: Detect active game session
        UI -> UI: Create SaveGamePacket:\n{type="SAVE_GAME", gameID, moves[]}
        
        UI -> Socket: send(SaveGamePacket)
        activate Socket
        Socket -> Server: Forward packet
        deactivate Socket
        
        Server -> Server: Parse save game request
        Server -> DB: INSERT INTO game_history\n(gameID, moves, status='INTERRUPTED')
        activate DB
        DB --> Server: Game saved
        deactivate DB
        
        Server -> Socket: send(ACK_SAVED)
        activate Socket
        Socket -> UI: Game saved confirmation
        deactivate Socket
    end
    
    == Send Sign Out Request ==
    UI -> UI: Create SignOutPacket:\n{type="SIGNOUT", sessionID, userID}
    
    UI -> Socket: send(SignOutPacket)
    activate Socket
    Socket -> Server: Forward packet
    deactivate Socket
    
    Server -> Server: Parse sign out request
    Server -> Server: Validate sessionID
    
    alt Invalid session
        Server -> Socket: send(ERROR_INVALID_SESSION)
        activate Socket
        Socket -> UI: Forward error
        deactivate Socket
        UI -> User: Show "Session expired"
        
    else Valid session
        == Update User Status ==
        Server -> DB: UPDATE users SET\nstatus='OFFLINE',\nlast_logout=NOW()\nWHERE userID=?
        activate DB
        DB --> Server: Status updated
        deactivate DB
        
        == Remove from Online Players ==
        Server -> Server: Remove from activeUsers list:\nactiveUsers.remove(userID)
        
        Server -> Server: Broadcast to other UIs:\nLOBBY_UPDATE (player offline)
        
        == Clear Session ==
        Server -> Server: Delete session:\nsessions.remove(sessionID)
        
        Server -> Server: Create ResponsePacket:\n{status="SUCCESS",\nmsg="Signed out successfully"}
        
        Server -> Socket: send(ResponsePacket)
        activate Socket
        Socket -> UI: Forward response
        deactivate Socket
        
        == UI Cleanup ==
        UI -> UI: Clear local session data:\ndelete sessionID,\ndelete userInfo
        
        UI -> UI: Close game UI
        UI -> User: Show "Signed out successfully"
        
        == Close TCP Connection ==
        UI -> Socket: send(CLOSE_CONNECTION)
        activate Socket
        Socket -> Server: Forward close request
        deactivate Socket
        
        Server -> Server: Log: "UI disconnected"
        Server -> Socket: close(UISocket)
        activate Socket
        Socket -> UI: Connection closed
        deactivate Socket
        
        UI -> UI: close(socket)
        
        UI -> User: Redirect to Login page
        deactivate UI
        
        Server -> Server: Free resources:\ndelete thread/handler
        deactivate Server
    end
end

@enduml