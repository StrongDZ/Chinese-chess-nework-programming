@startuml
title Customize Board Sequence Diagram - Chinese Chess (TCP Socket)

skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true

actor User
participant "Client" as Client
participant "TCP Socket" as Socket
participant "Server" as Server
database "Database" as DB

== Open Customize Board ==
User -> Client: Click "Customize Board" / "Settings"
activate Client

Client -> Client: Create GetPreferencesPacket:\n{type="GET_PREFERENCES",\nsessionID, userID}

Client -> Socket: send(GetPreferencesPacket)
activate Socket
Socket -> Server: Forward packet
deactivate Socket
activate Server

Server -> Server: Validate sessionID

alt Invalid session
    Server -> Socket: send(ERROR_SESSION)
    activate Socket
    Socket -> Client: Forward error
    deactivate Socket
    Client -> User: Show "Session expired"
    deactivate Client
    
else Valid session
    Server -> DB: SELECT * FROM user_preferences\nWHERE userID = ?
    activate DB
    
    alt No preferences found
        DB --> Server: No record (first time)
        deactivate DB
        
        Server -> Server: Use default preferences:\n{board_theme="default",\npiece_style="default"}
        
    else Preferences exist
        DB --> Server: Return saved preferences:\n{board_theme, piece_style}
        deactivate DB
    end
    
    Server -> Socket: send(PreferencesPacket)
    activate Socket
    Socket -> Client: Forward preferences
    deactivate Socket
    
    Client -> User: Display customization page:\n- Board Theme section\n  (Currently: [theme_name])\n- Piece Style section\n  (Currently: [style_name])\n- [Save] button\n- [Cancel] button
    deactivate Client
    deactivate Server
end

== Customize Board Theme ==
User -> Client: Select/Enter board theme
activate Client

Client -> Client: Store temporary selection:\ntemp_board_theme = user_input

Client -> User: Update preview/display
deactivate Client

== Customize Piece Style ==
User -> Client: Select/Enter piece style
activate Client

Client -> Client: Store temporary selection:\ntemp_piece_style = user_input

Client -> User: Update preview/display
deactivate Client

== Save Customizations ==
User -> Client: Click "Save"
activate Client

Client -> Client: Collect customizations:\n{board_theme, piece_style}

Client -> Client: Create SavePreferencesPacket:\n{type="SAVE_PREFERENCES",\nsessionID, userID,\nboard_theme, piece_style}

Client -> Socket: send(SavePreferencesPacket)
activate Socket
Socket -> Server: Forward packet
deactivate Socket

Server -> Server: Validate sessionID

alt Invalid session
    Server -> Socket: send(ERROR_SESSION)
    activate Socket
    Socket -> Client: Forward error
    deactivate Socket
    Client -> User: Show "Session expired"
    
else Valid session
    Server -> DB: SELECT COUNT(*) FROM user_preferences\nWHERE userID = ?
    activate DB
    
    alt First time customization
        DB --> Server: COUNT = 0
        deactivate DB
        
        Server -> DB: INSERT INTO user_preferences\n(userID, board_theme,\npiece_style, updated_at)\nVALUES (?, ?, ?, NOW())
        activate DB
        
        alt Insert failed
            DB --> Server: Error
            deactivate DB
            Server -> Socket: send(ERROR_DB)
            activate Socket
            Socket -> Client: Forward error
            deactivate Socket
            Client -> User: Show "Failed to save"
            
        else Insert successful
            DB --> Server: Preferences saved
            deactivate DB
            
            Server -> Socket: send(SUCCESS_RESPONSE)
            activate Socket
            Socket -> Client: Forward success
            deactivate Socket
            
            Client -> Client: Update local preferences
            Client -> User: Show "Saved successfully"
            Client -> User: Apply new settings
        end
        
    else Update existing preferences
        DB --> Server: COUNT > 0
        deactivate DB
        
        Server -> DB: UPDATE user_preferences SET\nboard_theme = ?,\npiece_style = ?,\nupdated_at = NOW()\nWHERE userID = ?
        activate DB
        
        alt Update failed
            DB --> Server: Error
            deactivate DB
            Server -> Socket: send(ERROR_DB)
            activate Socket
            Socket -> Client: Forward error
            deactivate Socket
            Client -> User: Show "Failed to save"
            
        else Update successful
            DB --> Server: Preferences updated
            deactivate DB
            
            Server -> Socket: send(SUCCESS_RESPONSE)
            activate Socket
            Socket -> Client: Forward success
            deactivate Socket
            
            Client -> Client: Update local preferences
            Client -> User: Show "Saved successfully"
            Client -> User: Apply new settings
        end
    end
end

deactivate Client
deactivate Server

== Cancel Customization ==
User -> Client: Click "Cancel"
activate Client

Client -> Client: Discard temporary changes

Client -> User: Close customization page
deactivate Client

@enduml